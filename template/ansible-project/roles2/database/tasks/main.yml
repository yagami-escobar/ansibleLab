---
# tasks file for roles
- name: Instalar MySQL Server
  apt:
    name: mysql-server
    state: present
    update_cache: true

- name: Asegurar que MySQL está activo
  service:
    name: mysql
    state: started
    enabled: true

- name: Establecer contraseña de root (si es necesario)
  shell: |
    mysql -u root <<EOF
    ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '{{ mysql_root_password }}';
    FLUSH PRIVILEGES;
    EOF
  args:
    executable: /bin/bash

- name: Crear base de datos
  shell: |
    mysql -u root -p{{ mysql_root_password }} -e "CREATE DATABASE IF NOT EXISTS {{ db_name }};"
  args:
    executable: /bin/bash

- name: Crear usuario externo y asignar permisos
  shell: |
    mysql -u root -p{{ mysql_root_password }} <<EOF
    CREATE USER IF NOT EXISTS '{{ db_user }}'@'%' IDENTIFIED BY '{{ db_user_password }}';
    GRANT ALL PRIVILEGES ON {{ db_name }}.* TO '{{ db_user }}'@'%';
    FLUSH PRIVILEGES;
    EOF
  args:
    executable: /bin/bash

- name: Permitir conexiones externas (bind-address = 0.0.0.0)
  lineinfile:
    path: /etc/mysql/mysql.conf.d/mysqld.cnf
    regexp: '^bind-address'
    line: "bind-address = 0.0.0.0"
    backup: yes

- name: Reiniciar MySQL
  service:
    name: mysql
    state: restarted

- name: Subir archivo de migración
  copy:
    src: files/migrations.sql
    dest: /tmp/migrations.sql

- name: Cargar migraciones
  shell: |
    mysql -u {{ db_user }} -p'{{ db_user_password }}' {{ db_name }} < /tmp/migrations.sql

- name: Verificar integridad de datos
  community.mysql.mysql_query:
    login_user: "root"
    login_password: "{{ mysql_root_password }}"
    query: "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = '{{ db_name }}';"
  register: table_count

- name: Mostrar resultado de carga SQL
  debug:
    var: table_count

